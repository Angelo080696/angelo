// Appliquer box-sizing: border-box à tous les éléments pour que padding et bordures
// ne fassent pas grossir les éléments hors de leur boîte
*, *::before, *::after {
    box-sizing: border-box;
  }
  
  // Déclaration d'une couleur qu'on peut réutiliser (fuchsia ici)
  $color: #F0F;
  
  // Styliser le corps de la page
  body {
    margin: 2rem; // Marge autour du body
    display: grid; // Utilisation d'une grille CSS
    justify-content: center; // Centrer les colonnes horizontalement
    align-content: center; // Centrer le contenu verticalement
    grid-template-columns: 1fr; // Une seule colonne
    grid-template-rows: 1fr; // Une seule ligne
    min-height: calc(100vh - 2 * 2rem); // Hauteur min = taille de l’écran - les marges
    align-items: center; // Centre les enfants sur l’axe vertical
    border: 1px solid #888; // Bordure grise autour du body
  }
  
  // Modèle de style (placeholder) pour les colonnes, à réutiliser plus bas
  %border-pad {
    grid-area: 1 / 1 / -1 / -1; // Prend toute la grille
    margin-block-end: .5rem; // Marge en bas
    box-shadow: inset 0 0 0 1px #555; // Bordure interne gris foncé
    padding: 1rem; // Espace intérieur
  }
  
  // Variable pour définir combien de colonnes on veut générer
  $columns: 12;
  
  // Mixin qui va générer dynamiquement les styles pour chaque .col
  @mixin cols-numbered() {
    // Boucle de 1 à 12 (ou ce que vaut $columns)
    @for $i from 1 through $columns {
      // Sélecteur pour cibler le i-ème enfant avec la classe .col
      .col:nth-child(#{$i}) { 
        @extend %border-pad; // Réutilise le style défini dans %border-pad
  
        // Fait tourner chaque élément de plus en plus : 15°, 30°, etc.
        transform: rotate(15deg * $i);
  
        // Change la couleur de fond progressivement à partir du rouge
        background: adjust-hue(red, 15deg * $i);
      }
    }
  }
  
  // Appel du mixin pour générer toutes les colonnes automatiquement
  @include cols-numbered();
  